[app:voteit.core]
use = egg:voteit.core
reload_templates = false
debug_authorization = false
debug_notfound = false
debug_routematch = false
debug_templates = false
default_locale_name = en
available_languages = en sv
zodb_uri = file://%(here)s/../var/Data.fs?connection_cache_size=20000

sqlite_file = %(here)s/../var/sqlite.db

#VoteIT content types
content_types =
    voteit.core.models.agenda_item
    voteit.core.models.meeting
    voteit.core.models.poll
    voteit.core.models.proposal
    voteit.core.models.site
    voteit.core.models.user
    voteit.core.models.users

#VoteIT settings
poll_plugins =
    voteit.schulze
    voteit.core.plugins.majority_poll

[pipeline:main]
pipeline =
    egg:WebError#evalerror
    egg:repoze.zodbconn#closer
    egg:repoze.retry#retry
    tm
    voteit.core

[filter:tm]
use = egg:repoze.tm2#tm
commit_veto = repoze.tm:default_commit_veto

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 6543

# Begin logging configuration

[loggers]
keys = root, voteit.core

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_voteit.core]
level = WARN
handlers =
qualname = voteit.core

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
